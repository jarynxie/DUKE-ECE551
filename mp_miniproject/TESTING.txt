
This is the test cases for my command shell

Usage: As specified in commandShell.txt, type "./ffosh."  to run the shell

There are xxx test cases in total: (step1) + (step2)


----------------- Test cases for step1 ----------------
(1-1) /bin/ls
ffosh:/home/jx95/ece551/mp_miniproject $/bin/ls
'#TESTING.txt#'   TESTING.txt~	     ffosh.cpp	    test_input.txt
 Makefile	  cmd.h		     numerics.txt   testcases
 README		  commandShell.txt   shell.h
 TESTING.txt	  ffosh.	     test.sh
Program was successful

This is correct because I typed the full path of "ls" and it successfully listed the files in the current directory.
My prompt also correctly shows that the the program was successful.

(1-2) exit
ffosh:/home/jx95/ece551/mp_miniproject $exit
jx95@ece551:~/ece551/mp_miniproject$

This is correct because when type "exit", the shell should exit.

(1-3) EOF: ctrl + D
ffosh:/home/jx95/ece551/mp_miniproject $
jx95@ece551:~/ece551/mp_miniproject$

This is correct because when encountered EOF, the shell should exit.

(1-4)
ffosh:/home/jx95/ece551/mp_miniproject $cd testcases
ffosh:/home/jx95/ece551/mp_miniproject/testcases $./code

42
Hello World
45
42
Program was successful
    
This is correct because I copied this file from earlier assignment and the output is as expected.
My prompt also correctly shows new current directory before the $, which is the requirement in Step3.

(1-5) segfault
ffosh:/home/jx95/ece551/mp_miniproject/testcases $./segfault
Terminated by signal 11

This is correct because I wrote a file which has segfault in it, and my shell correctly shows its signal number(11).

----------------- Test cases for step2 ----------------
(2-1) initialize ECE551PATH
ffosh:/home/jx95/ece551/mp_miniproject $echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject $echo $ECE551PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program was successful

This is requirement for later step, here I use it to show that "ECE551PATH" is correctly initialized.

(2-2) ls
ffosh:/home/jx95/ece551/mp_miniproject $ls
Makefile     TESTING.txt~      ffosh.	     shell.h	     testcases
README	     cmd.h	       ffosh.cpp     test.sh
TESTING.txt  commandShell.txt  numerics.txt  test_input.txt
Program was successful

This is correct because it searches the ECE551PATH and correctly execute /bin/ls

(2-3) status
ffosh:/home/jx95/ece551/mp_miniproject $status
No gradings in progress
===========================================
Assignments that are due in the near future
 (but you have not yet passed)
============================================
mp_miniproject Due: Sun Dec  8 18:59:59 2019
 **HARD DEADLINE**
   -> requires 1
Program was successful

This is correct because it searches the ECE551PATH and correctly execute /usr/local/bin/status

(2-4) absolute path
ffosh:/home/jx95/ece551/mp_miniproject $/bin/pwd
/home/jx95/ece551/mp_miniproject
Program was successful

This is correct because the path name has a "/" in it and it should only look at the specified command

(2-5) relative path
ffosh:/home/jx95/ece551/mp_miniproject/testcases $./segfault
Terminated by signal 11

This is corrct because it recognizes it as a relative path and execute the specified program

(2-6)
ffosh:/home/jx95/ece551/mp_miniproject $happy
Command happy not found

This is correct because there is no command named "happy"

(2-7)
ffosh:/home/jx95/ece551/mp_miniproject $/bin/status
execve: No such file or directory
Program failed with code 1

This is correct because the path name has a "/" in it so it should only search the specified directory and "status" is not in this directory.

(2-8) change ECE551PATH
ffosh:/home/jx95/ece551/mp_miniproject $status
No gradings in progress
===========================================
Assignments that are due in the near future
 (but you have not yet passed)
============================================
mp_miniproject Due: Sun Dec  8 18:59:59 2019
 **HARD DEADLINE**
   -> requires 1
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject $set ECE551PATH /usr/games:/usr/local/games
Trying to change ECE551PATH, automically export it.
Run myenv to check if ECE551PATH was changed.
ffosh:/home/jx95/ece551/mp_miniproject $status
Command status not found

This is correct because I changed the value of ECE551PATH, resulting in "status" command not found after the change.
And if you try to run "myenv", you can see that the value of it has been changed.

(2-9)
ffosh:/home/jx95/ece551/mp_miniproject $ls -l
total 376
-rw-rw-r-- 1 jx95 jx95   4724 Dec  5 01:04 '#TESTING.txt#'
-rw-rw-r-- 1 jx95 jx95    164 Dec  4 10:48  Makefile
-rw-rw-r-- 1 jx95 jx95   2499 Nov 15 10:50  README
-rw-rw-r-- 1 jx95 jx95   3660 Dec  4 01:47  TESTING.txt
-rw-rw-r-- 1 jx95 jx95   4927 Dec  3 18:15  cmd.h
-rw-rw-r-- 1 jx95 jx95   7907 Nov 15 10:50  commandShell.txt
-rwxrwxr-x 1 jx95 jx95 314112 Dec  4 11:53  ffosh.
-rw-rw-r-- 1 jx95 jx95   2583 Dec  4 11:52  ffosh.cpp
-rw-rw-r-- 1 jx95 jx95  12413 Nov 15 10:50  numerics.txt
-rw-rw-r-- 1 jx95 jx95   2634 Dec  4 11:53  shell.h
-rwxrwxrwx 1 jx95 jx95     80 Dec  3 14:44  test.sh
-rw-rw-r-- 1 jx95 jx95      5 Dec  3 14:44  test_input.txt
drwxrwxr-x 2 jx95 jx95     54 Dec  4 00:30  testcases
Program was successful

This is correct because it shows that command can now take arguments.

(2-10)
ffosh:/home/jx95/ece551/mp_miniproject $echo a b 23
a b 23
Program was successful

This is correct because it shows that argument of "echo" are correctly passed.

(2-11)
ffosh:/home/jx95/ece551/mp_miniproject $echo          a               b     23
a b 23
Program was successful

This is correct because it successfully skips the whitespaces between arguments.

(2-12)
ffosh:/home/jx95/ece551/mp_miniproject $echo "a   b"  c        "def    ghi"
a   b c def    ghi
Program was successful

This is correct because it supports literal whitespaces when using "

(2-13)
ffosh:/home/jx95/ece551/mp_miniproject $echo "\"hello world\""    "a\\b\\c d\\"
"hello world" a\b\c d\
Program was successful

This is correct because it supports escaped quotation marks and backslashed

(2-14)
ffosh:/home/jx95/ece551/mp_miniproject $echo a\\\b
a\b
Program was successful

This is just another example to show that escaping is well supported.

(2-15)
ffosh:/home/jx95/ece551/mp_miniproject $echo "aaaa b
Unclosed quotation!
Program was successful

This is correct because it reports error when encountered unclosed quotation mark.

(2-16)
ffosh:/home/jx95/ece551/mp_miniproject $pwd
/home/jx95/ece551/mp_miniproject
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject $set PATH 123
ffosh:/home/jx95/ece551/mp_miniproject $export PATH
ffosh:/home/jx95/ece551/mp_miniproject $pwd
/home/jx95/ece551/mp_miniproject
Program was successful

This is correct because it shows that changing PATH cannot affect the search range, only ECE551PATH can affect it.


----------------- Test cases for step3 ----------------
Note1: As stated on Piazza, I can choose if to automically export the variable that's already been exported before.
Here, I choose that the user must EXPORT IT AGAIN after changing the variable's value,
However, if the user want to chnge "ECE551PATH", it will be automically exported. In order to check if the change is
successful, you can run "myenv" after the change to see if it works (because now the search range has changed, "env"
may not be found in ECE551PATH).
Note2: Also as posted on Piazza, I can choose how to evaluate a variable. Here, I choose that in "set var value",
everything after "var " is the value of this variable.
-------------------------------------------------------
(3-1)
case1:
ffosh:/home/jx95/ece551/mp_miniproject $cd ./testcases
ffosh:/home/jx95/ece551/mp_miniproject/testcases $ls
code  segfault	segfault.cpp
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject/testcases $cd ..
ffosh:/home/jx95/ece551/mp_miniproject $cd /home/jx95/ece551/mp_miniproject/testcases
ffosh:/home/jx95/ece551/mp_miniproject/testcases $ls
code  segfault	segfault.cpp
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject/testcases $

This is correct because it shows the changes of current directory in the prompt.
It perfectly supports relative and absolute paths. 

case2:
ffosh:/home/jx95/ece551/mp_miniproject $cd notexist
Failed to change directory

This is correct because "notexist" doesn't exist, so we cannot change the current directory to it.

(3-2)
ffosh:/home/jx95/ece551/mp_miniproject $env
//There are too many so I don't show them here, you can test it by typing "env"

This is correct because it shows all the variables.

(3-3)
ffosh:/home/jx95/ece551/mp_miniproject $echo $HOME
/home/jx95
Program was successful

This is correct because it replaces $varname with its value in the argument

(3-4)
ffosh:/home/jx95/ece551/mp_miniproject $echo $LOGNAME=jx95testtest
jx95=jx95testtest
Program was successful

This is correct because it supports variable expansion.

(3-5)
ffosh:/home/jx95/ece551/mp_miniproject $echo $VISUAL$SHELL
emacs -nw/bin/bash
Program was successful

This is another variable expansion example.

(3-6)
ffosh:/home/jx95/ece551/mp_miniproject $echo $nosuchvar
$nosuchvar
Program was successful

This is correct because there is no variable named "nosuchvar", so it just print the string out.

(3-7)
ffosh:/home/jx95/ece551/mp_miniproject $$PATH
Command /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games not found

This is correct because the command name is now replaced with the variable's value and it cannot be found.

(3-8)
ffosh:/home/jx95/ece551/mp_miniproject $set xjy 12345
ffosh:/home/jx95/ece551/mp_miniproject $env
ffosh:/home/jx95/ece551/mp_miniproject $echo $xjy
12345
Program was successful

There are too many variables, so I don't include them here. However, there is no such variable that named "xjy".
But I when typing "$xjy", my shell replaces it with its value.

(3-9)
ffosh:/home/jx95/ece551/mp_miniproject $set
Usage: set var value

This is correct because the test case didn't follow the correct usage.

(3-10)
ffosh:/home/jx95/ece551/mp_miniproject $set 12!cww 32412
Invalid variable name!

This is correct because the variable name is invalid, it must be a combination of letters, underscores and numbers.

(3-11)
ffosh:/home/jx95/ece551/mp_miniproject $set xjy 123
ffosh:/home/jx95/ece551/mp_miniproject $env
(output didn't inclue here, no variable named "xjy")
ffosh:/home/jx95/ece551/mp_miniproject $export xjy
ffosh:/home/jx95/ece551/mp_miniproject $env
(too many lines, not include all of them)
xjy=123

This is correct because variable can only be put in the environment after calling "export".

(3-12)
ffosh:/home/jx95/ece551/mp_miniproject $set xjy 11 22 33 aa
ffosh:/home/jx95/ece551/mp_miniproject $echo $xjy
11 22 33 aa
Program was successful

This is correct because I choose to evaluate a variable with eveything after "var ", including spaces

(3-13)
ffosh:/home/jx95/ece551/mp_miniproject $set cdvar ..
ffosh:/home/jx95/ece551/mp_miniproject $cd $cdvar
ffosh:/home/jx95/ece551 $

This is correct because it replaces "cdvar" with its value and change the current directory accordingly.

(3-14)
ffosh:/home/jx95/ece551/mp_miniproject $export
Usage: export var

This is correct because the test case didn't use the valid usage to export variable, variable name must be included.

(3-15)
ffosh:/home/jx95/ece551/mp_miniproject $export notexist
Variable not found!

This is correct because the variable doesn't exist, so I cannot export it.

(3-16)
ffosh:/home/jx95/ece551/mp_miniproject $echo $xjy
11223344
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject $rev xjy
ffosh:/home/jx95/ece551/mp_miniproject $echo $xjy
44332211
Program was successful

This is correct because the value of the specified variable is successfully reversed.

(3-17)
ffosh:/home/jx95/ece551/mp_miniproject $rev notexist
Variable not found!

This is correct because the variable doesn't exist, so it cannot be reversed.

(3-18) same as (2-8)
ffosh:/home/jx95/ece551/mp_miniproject $status
No gradings in progress
===========================================
Assignments that are due in the near future
 (but you have not yet passed)
============================================
mp_miniproject Due: Sun Dec  8 18:59:59 2019
 **HARD DEADLINE**
   -> requires 1
Program was successful
ffosh:/home/jx95/ece551/mp_miniproject $set ECE551PATH /usr/games:/usr/local/games
Trying to change ECE551PATH, automically export it.
Run myenv to check if ECE551PATH was changed.
ffosh:/home/jx95/ece551/mp_miniproject $status
Command status not found

This is correct because I changed the value of ECE551PATH, resulting in "status" command not found after the change.
And if you try to run "myenv", you can see that the value of it has been changed.

----------------- Test cases for step4 ----------------
(4-1)
